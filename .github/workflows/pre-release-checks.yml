name: Pre Release Checks

on:
  workflow_call:
    inputs:
      npm-package-url:
        required: true
        type: string
      black-duck-project-name:
        required: true
        type: string

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with: 
          ref: develop
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - id: check # This will be the reference for getting the outputs.
        uses: EndBug/version-check@v2 # You can choose the version/branch you prefer.
        with:
          file-url: ${{ inputs.npm-package-url }}
          assume-same-version: old
      - name: Fail if no semantic change 
        if: steps.check.outputs.type == 'undefined' || steps.check.outputs.changed == 'false'
        run: |
          echo "No version change :/"
          exit: 1
        
  check-changelog:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with: 
          ref: develop
      - name: Get current version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Check CHANGELOG
        id: changelog-check
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.package-version.outputs.current-version}}
          validation_level: warn

  check-licenses:
    needs: check-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with: 
          ref: develop
      - name: Get current version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main 
      - name: Check 3rd party licenses file
        run: |
          if grep -q "${{ inputs.black-duck-project-name }} : ${{ steps.package-version.outputs.current-version}}" 3RD_PARTY_LICENSES.txt
          then
              echo "Version has been updated"
          else
              echo "Version must be updated"
              exit 1
          fi
      